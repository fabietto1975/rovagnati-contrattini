<?php

namespace backend\app\dao;

use backend\common\dao\DAOAbstract;
use backend\common\dao\DAOInterface;

class ContrattinoDAO extends DAOAbstract implements DAOInterface {

    public function __construct() {
        parent::__construct();
    }

    public function createContrattino($contrattino) {
        $stmt = $this->getPdo()->prepare("INSERT INTO CONTRATTO_BASICDATA(ID_CLIENTE, DATA_CREAZIONE, ID_UTENTE_CREA) VALUES (:id_cliente, now(), :id_utente_crea)");
        $stmt->bindValue('id_cliente', $contrattino['id_cliente']);
        $stmt->bindValue('id_utente_crea', $contrattino['id_utente_crea']);
        $stmt->execute();

        $tipoContratto = $contrattino['tipo_contratto'];
        $id = $this->getPdo()->lastInsertId();
        if ($tipoContratto == 'FINEANNO') {
            $stmt = $this->getPdo()->prepare("
                INSERT INTO CONTRATTO_PREMIOFINEANNO(
                    ID,
                    MODALITALIQUIDAZIONE,
                    TEMPISTICADILIQUIDAZIONE,
                    MESEANNOINIZIO,
                    MESEANNOFINE,
                    DIVISIONIDACONSIDERARE,
                    MODALITADEFINIZIONEOBBIETTIVO,
                    MODALITADEFINIZIONEPREMIO,
                    OBBIETTIVO_VALORE_1,
                    OBBIETTIVO_PREMIO_1,
                    OBBIETTIVO_VALORE_2,
                    OBBIETTIVO_PREMIO_2,
                    OBBIETTIVO_VALORE_3,
                    OBBIETTIVO_PREMIO_3,
                    OBBIETTIVO_VALORE_4,
                    OBBIETTIVO_PREMIO_4,
                    OBBIETTIVO_VALORE_5,
                    OBBIETTIVO_PREMIO_5,
                    ID_PRODOTTO_OBB_QUALIFICANTE_1,
                    ID_PRODOTTO_OBB_QUALIFICANTE_2,
                    PERC_TARGET_TOTALE_OBB_QUALIFICANTE,
                    OBBIETTIVO_MINIMO_OBB_QUALIFICANTE,
                    PREMIO1_OBB_QUALIFICANTE,
                    TIPO1_OBB_QUALIFICANTE,
                    OBBIETTIVO_ULTERIORE_OBB_QUALIFICANTE,
                    PREMIO2_OBB_QUALIFICANTE,
                    TIPO2_OBB_QUALIFICANTE,
                    SUPERO1_TIPOOBBIETTIVO,
                    SUPERO1_OBBIETTIVI,
                    SUPERO1_PREMIO,
                    SUPERO1_TIPOPREMIO,
                    SUPERO2_TIPOOBBIETTIVO,
                    SUPERO2_OBBIETTIVI,
                    SUPERO2_PREMIO,
                    SUPERO2_TIPOPREMIO,
                    SUPERO3_TIPOOBBIETTIVO,
                    SUPERO3_OBBIETTIVI,
                    SUPERO3_PREMIO,
                    SUPERO3_TIPOPREMIO,
                    SUPERO4_TIPOOBBIETTIVO,
                    SUPERO4_OBBIETTIVI,
                    SUPERO4_PREMIO,
                    SUPERO4_TIPOPREMIO,
                    SUPERO5_TIPOOBBIETTIVO,
                    SUPERO5_OBBIETTIVI,
                    SUPERO5_PREMIO,
                    SUPERO5_TIPOPREMIO) VALUES (
                    :id,
                    :modalitaliquidazione,
                    :tempisticadiliquidazione,
                    :meseannoinizio,
                    :meseannofine,
                    :divisionidaconsiderare,
                    :modalitadefinizioneobbiettivo,
                    :modalitadefinizionepremio,
                    :obbiettivo_valore_1,
                    :obbiettivo_premio_1,
                    :obbiettivo_valore_2,
                    :obbiettivo_premio_2,
                    :obbiettivo_valore_3,
                    :obbiettivo_premio_3,
                    :obbiettivo_valore_4,
                    :obbiettivo_premio_4,
                    :obbiettivo_valore_5,
                    :obbiettivo_premio_5,
                    :id_prodotto_obb_qualificante_1,
                    :id_prodotto_obb_qualificante_2,
                    :perc_target_totale_obb_qualificante,
                    :obbiettivo_minimo_obb_qualificante,
                    :premio1_obb_qualificante,
                    :tipo1_obb_qualificante,
                    :obbiettivo_ulteriore_obb_qualificante,
                    :premio2_obb_qualificante,
                    :tipo2_obb_qualificante,
                    :supero1_tipoobbiettivo,
                    :supero1_obbiettivi,
                    :supero1_premio,
                    :supero1_tipopremio,
                    :supero2_tipoobbiettivo,
                    :supero2_obbiettivi,
                    :supero2_premio,
                    :supero2_tipopremio,
                    :supero3_tipoobbiettivo,
                    :supero3_obbiettivi,
                    :supero3_premio,
                    :supero3_tipopremio,
                    :supero4_tipoobbiettivo,
                    :supero4_obbiettivi,
                    :supero4_premio,
                    :supero4_tipopremio,
                    :supero5_tipoobbiettivo,
                    :supero5_obbiettivi,
                    :supero5_premio,
                    :supero5_tipopremio
                )");
            $stmt->bindValue('id', $id);
            $stmt->bindValue('modalitaliquidazione', isset($contrattino['modalitaliquidazione']) ? $contrattino['modalitaliquidazione'] : null);
            $stmt->bindValue('tempisticadiliquidazione', isset($contrattino['tempisticadiliquidazione']) ? $contrattino['tempisticadiliquidazione'] : null);
            $stmt->bindValue('meseannoinizio', isset($contrattino['meseannoinizio']) ? $contrattino['meseannoinizio'] : null);
            $stmt->bindValue('meseannofine', isset($contrattino['meseannofine']) ? $contrattino['meseannofine'] : null);
            $stmt->bindValue('divisionidaconsiderare', isset($contrattino['divisionidaconsiderare']) ? $contrattino['divisionidaconsiderare'] : null);
            $stmt->bindValue('modalitadefinizioneobbiettivo', isset($contrattino['modalitadefinizioneobbiettivo']) ? $contrattino['modalitadefinizioneobbiettivo'] : null);
            $stmt->bindValue('modalitadefinizionepremio', isset($contrattino['modalitadefinizionepremio']) ? $contrattino['modalitadefinizionepremio'] : null);
            $stmt->bindValue('obbiettivo_valore_1', isset($contrattino['obbiettivo_valore_1']) ? $contrattino['obbiettivo_valore_1'] : null);
            $stmt->bindValue('obbiettivo_premio_1', isset($contrattino['obbiettivo_premio_1']) ? $contrattino['obbiettivo_premio_1'] : null);
            $stmt->bindValue('obbiettivo_valore_2', isset($contrattino['obbiettivo_valore_2']) ? $contrattino['obbiettivo_valore_2'] : null);
            $stmt->bindValue('obbiettivo_premio_2', isset($contrattino['obbiettivo_premio_2']) ? $contrattino['obbiettivo_premio_2'] : null);
            $stmt->bindValue('obbiettivo_valore_3', isset($contrattino['obbiettivo_valore_3']) ? $contrattino['obbiettivo_valore_3'] : null);
            $stmt->bindValue('obbiettivo_premio_3', isset($contrattino['obbiettivo_premio_3']) ? $contrattino['obbiettivo_premio_3'] : null);
            $stmt->bindValue('obbiettivo_valore_4', isset($contrattino['obbiettivo_valore_4']) ? $contrattino['obbiettivo_valore_4'] : null);
            $stmt->bindValue('obbiettivo_premio_4', isset($contrattino['obbiettivo_premio_4']) ? $contrattino['obbiettivo_premio_4'] : null);
            $stmt->bindValue('obbiettivo_valore_5', isset($contrattino['obbiettivo_valore_5']) ? $contrattino['obbiettivo_valore_5'] : null);
            $stmt->bindValue('obbiettivo_premio_5', isset($contrattino['obbiettivo_premio_5']) ? $contrattino['obbiettivo_premio_5'] : null);
            $stmt->bindValue('id_prodotto_obb_qualificante_1', isset($contrattino['id_prodotto_obb_qualificante_1']) ? $contrattino['id_prodotto_obb_qualificante_1'] : null);
            $stmt->bindValue('id_prodotto_obb_qualificante_2', isset($contrattino['id_prodotto_obb_qualificante_2']) ? $contrattino['id_prodotto_obb_qualificante_2'] : null);
            $stmt->bindValue('perc_target_totale_obb_qualificante', isset($contrattino['perc_target_totale_obb_qualificante']) ? $contrattino['perc_target_totale_obb_qualificante'] : null);
            $stmt->bindValue('obbiettivo_minimo_obb_qualificante', isset($contrattino['obbiettivo_minimo_obb_qualificante']) ? $contrattino['obbiettivo_minimo_obb_qualificante'] : null);
            $stmt->bindValue('premio1_obb_qualificante', isset($contrattino['premio1_obb_qualificante']) ? $contrattino['premio1_obb_qualificante'] : null);
            $stmt->bindValue('tipo1_obb_qualificante', isset($contrattino['tipo1_obb_qualificante']) ? $contrattino['tipo1_obb_qualificante'] : null);
            $stmt->bindValue('obbiettivo_ulteriore_obb_qualificante', isset($contrattino['obbiettivo_ulteriore_obb_qualificante']) ? $contrattino['obbiettivo_ulteriore_obb_qualificante'] : null);
            $stmt->bindValue('premio2_obb_qualificante', isset($contrattino['premio2_obb_qualificante']) ? $contrattino['premio2_obb_qualificante'] : null);
            $stmt->bindValue('tipo2_obb_qualificante', isset($contrattino['tipo2_obb_qualificante']) ? $contrattino['tipo2_obb_qualificante'] : null);
            $stmt->bindValue('supero1_tipoobbiettivo', isset($contrattino['supero1_tipoobbiettivo']) ? $contrattino['supero1_tipoobbiettivo'] : null);
            $stmt->bindValue('supero1_obbiettivi', isset($contrattino['supero1_obbiettivi']) ? $contrattino['supero1_obbiettivi'] : null);
            $stmt->bindValue('supero1_premio', isset($contrattino['supero1_premio']) ? $contrattino['supero1_premio'] : null);
            $stmt->bindValue('supero1_tipopremio', isset($contrattino['supero1_tipopremio']) ? $contrattino['supero1_tipopremio'] : null);
            $stmt->bindValue('supero2_tipoobbiettivo', isset($contrattino['supero2_tipoobbiettivo']) ? $contrattino['supero2_tipoobbiettivo'] : null);
            $stmt->bindValue('supero2_obbiettivi', isset($contrattino['supero2_obbiettivi']) ? $contrattino['supero2_obbiettivi'] : null);
            $stmt->bindValue('supero2_premio', isset($contrattino['supero2_premio']) ? $contrattino['supero2_premio'] : null);
            $stmt->bindValue('supero2_tipopremio', isset($contrattino['supero2_tipopremio']) ? $contrattino['supero2_tipopremio'] : null);
            $stmt->bindValue('supero3_tipoobbiettivo', isset($contrattino['supero3_tipoobbiettivo']) ? $contrattino['supero3_tipoobbiettivo'] : null);
            $stmt->bindValue('supero3_obbiettivi', isset($contrattino['supero3_obbiettivi']) ? $contrattino['supero3_obbiettivi'] : null);
            $stmt->bindValue('supero3_premio', isset($contrattino['supero3_premio']) ? $contrattino['supero3_premio'] : null);
            $stmt->bindValue('supero3_tipopremio', isset($contrattino['supero3_tipopremio']) ? $contrattino['supero3_tipopremio'] : null);
            $stmt->bindValue('supero4_tipoobbiettivo', isset($contrattino['supero4_tipoobbiettivo']) ? $contrattino['supero4_tipoobbiettivo'] : null);
            $stmt->bindValue('supero4_obbiettivi', isset($contrattino['supero4_obbiettivi']) ? $contrattino['supero4_obbiettivi'] : null);
            $stmt->bindValue('supero4_premio', isset($contrattino['supero4_premio']) ? $contrattino['supero4_premio'] : null);
            $stmt->bindValue('supero4_tipopremio', isset($contrattino['supero4_tipopremio']) ? $contrattino['supero4_tipopremio'] : null);
            $stmt->bindValue('supero5_tipoobbiettivo', isset($contrattino['supero5_tipoobbiettivo']) ? $contrattino['supero5_tipoobbiettivo'] : null);
            $stmt->bindValue('supero5_obbiettivi', isset($contrattino['supero5_obbiettivi']) ? $contrattino['supero5_obbiettivi'] : null);
            $stmt->bindValue('supero5_premio', isset($contrattino['supero5_premio']) ? $contrattino['supero5_premio'] : null);
            $stmt->bindValue('supero5_tipopremio', isset($contrattino['supero5_tipopremio']) ? $contrattino['supero5_tipopremio'] : null);
            $stmt->execute();
        }
        return $this->readByID($id);
    }

    public function delete($id) {
        //NOP
    }

    public function read() {
        
    }

    public function readByUser($id_user) {

        $stmt = $this->getPdo()->prepare(""
                . "SELECT ID, USERNAME, RUOLO, ID_AGENTE, ID_ISPETTORE, ID_CAPOAREA "
                . "FROM v_anagrafica_utente u "
                . "WHERE u.ID = :id "
        );
        $stmt->bindValue('id', $id_user);
        $stmt->execute();
        $res = $stmt->fetch();
        if ($res == null) {
            return null;
        }
        $ruolo = $res['ruolo'];
        $field = null;
        switch ($ruolo) {
            case 'AGENTE' :
                $field = 'id_agente';
                break;
            case 'ISPETTORE' :
                $field = 'id_ispettore';
                break;
            case 'AGENTE' :
                $field = 'id_capoarea';
                break;
        }
        $sql = 'SELECT * FROM V_CONTRATTINI where id_cliente in (select id from anagrafica_cliente where ' . $field . ' = :id)';
        //TBD: verificare anche se il contrattino e' stato modificato o creato dall'utente corrente?
        $stmt = $this->getPdo()->prepare($sql);
        $stmt->bindParam('id', $id_user);
        $stmt->execute();
        $res = $stmt->fetchAll();
        return ($res);
    }

    public function update($item) {
        //NOP
    }

    public function readByID($id) {
        $sql = "SELECT * FROM V_CONTRATTINI WHERE ID=:id";
        $stmt = $this->getPdo()->prepare($sql);
        $stmt->bindParam('id', $id);
        $stmt->execute();
        $res = $stmt->fetchAll();
        return $res;
    }

    public function create($item) {
        
    }

}
